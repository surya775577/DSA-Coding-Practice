## 🔎 Binary Search

The `Binary_search.py` file contains an implementation of the **Binary Search algorithm** in Python.

### 📖 Description
Binary Search is an efficient algorithm to find the position of a target element (key) in a **sorted array**.  
It works by repeatedly dividing the search interval in half:

1. Compare the `key` with the middle element.
2. If they match, return the index.
3. If `key` is greater, search the right half.
4. If `key` is smaller, search the left half.
5. Continue until the element is found or the search space becomes empty.

This algorithm has a **time complexity of O(log n)**, making it much faster than linear search for large datasets.

---

### 🖥️ Code Usage

```python
def binary_search(arr, key):
    n = len(arr)
    low, high = 0, n - 1
    for i in range(low, high + 1):
        mid = (low + high) // 2
        if arr[mid] == key:
            return mid
        elif arr[mid] < key:
            low = mid + 1
        else:
            high = mid - 1
    return -1

# Example Input
# n = 5
# arr = [1, 3, 5, 7, 9]
# key = 7
# Output: 3 (index of key)
